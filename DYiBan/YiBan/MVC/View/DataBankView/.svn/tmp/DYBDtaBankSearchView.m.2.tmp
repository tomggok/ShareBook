//
//  DYBDtaBankSearchView.m
//  DYiBan
//
//  Created by tom zeng on 13-8-9.
//  Copyright (c) 2013年 ZzL. All rights reserved.
//

#import "DYBDtaBankSearchView.h"
#import "DYBDataBankListCell.h"
#import "UIView+DragonCategory.h"
#import "DYBDataBankChildrenListViewController.h"
#import "DYBDataBankFileDetailViewController.h"
#import "DYBDataBankShareEnterView.h"
#import "DYBDataBankDownloadManageViewController.h"
#import "DYBDataBankListCell.h"


#define  SEATCHBTN_TAG 120

@implementation DYBDtaBankSearchView{

    NSMutableArray *arrTag;
    NSMutableArray *arrName;
    NSMutableArray *arrContent;
   
    BOOL isNETSearch;
    
    NSMutableArray *arraySearchResult;
    NSMutableDictionary *dictSearchResult;
    NSMutableArray *arrayCell;
}
@synthesize arrayResourcesList,arrayViewCell = _arrayViewCell,iCellType = _iCellType,iBtnType = _iBtnType;
@synthesize tbDataBank,searchbar = _searchbar, VC = _VC,slideHideView = _slideHideView;

DEF_SIGNAL(FIRSTTOUCH)
DEF_SIGNAL(RECOVERBAR)
DEF_SIGNAL(TOUCHSIGLEBTN)
DEF_SIGNAL(BEGINEDITING)

- (id)initWithFrame:(CGRect)frame object:(id)object
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
//        [self initView:frame];
        _VC = object;
    }
    return self;
}


-(id)initWithFrame:(CGRect)frame slideView:(UIView *)slideView{
    
    _slideHideView = slideView;
    
    id obj = [self initWithFrame:frame];
    
    return obj;
}
-(void)initView:(CGRect)frame{

    arrayCell = [[NSMutableArray alloc]init];
    isNETSearch = NO;
    _searchbar = [[DragonUISearchBar alloc]initWithFrame:CGRectMake(0.0f, 0.0f, CGRectGetWidth(frame), CGRectGetHeight(frame)) backgroundColor:[UIColor clearColor] placeholder:@"文件名/分类名/标签名" isHideOutBackImg:NO isHideLeftView:NO];
    for (UIView *subview in [_searchbar subviews]) {
        if ([subview isKindOfClass:NSClassFromString(@"UISearchBarBackground")])
        {
            [subview removeFromSuperview];
        }else if ([subview isKindOfClass:NSClassFromString(@"UISearchBarTextField")]) {
            [(UITextField *)subview setBackground:[UIImage imageNamed:@"top_searchbar.png"]];
            
        }else if ([subview isKindOfClass:[UIButton class]]){
        
            DLogInfo(@"subview === %@",subview);
            [(UIButton *)subview setImage:[UIImage imageNamed:@"btn_search_cancel_def" ] forState:UIControlStateNormal];
            [(UIButton *)subview setImage:[UIImage imageNamed:@"btn_search_cancel_high" ] forState:UIControlStateHighlighted];
            [subview setBackgroundColor:[UIColor clearColor]];
        
        }
    }
    [_searchbar setBackgroundColor:[UIColor colorWithRed:248/255.0f green:248/255.0f blue:248/255.0f alpha:1.0f]];
    [_searchbar setUserInteractionEnabled:YES];
    [self addSubview:_searchbar];
//    [_searchbar release]; // 异常 报错
    
    tbDataBank = [[DragonUITableView alloc]initWithFrame:CGRectMake(0.0f, _searchbar.frame.origin.y + _searchbar.frame.size.height , 320.0f, self.frame.size.height - _searchbar.frame.origin.y - _searchbar.frame.size.height )];
    [tbDataBank setBackgroundColor:[UIColor clearColor]];
    [tbDataBank setHidden:YES];
    [tbDataBank setTableViewType:DTableViewSlime];
    [self addSubview:tbDataBank];
    [tbDataBank setSeparatorColor:[UIColor clearColor]];
    tbDataBank.v_headerVForHide = _searchbar;
    [tbDataBank release];
    

    
    arraySearchResult = [[NSMutableArray alloc]init];
    dictSearchResult = [[NSMutableDictionary alloc]init];

    UIButton *btnSearch = [[UIButton alloc]initWithFrame:CGRectMake(320-96/2, (SEARCHBAT_HIGH - 60/2)/2, 96/2, 60/2)];
    [btnSearch setBackgroundColor:[UIColor clearColor]];
    [btnSearch setTag:SEATCHBTN_TAG];
    [btnSearch setHidden:NO];
    [btnSearch setBackgroundImage:[UIImage imageNamed:@"btn_search_cancel_def"] forState:UIControlStateNormal];
    [btnSearch setBackgroundImage:[UIImage imageNamed:@"btn_search_cancel_high"] forState:UIControlStateHighlighted];
    [btnSearch addTarget:self action:@selector(doCancel) forControlEvents:UIControlEventTouchUpInside];
    [_searchbar addSubview:btnSearch];
    RELEASE(btnSearch);
}

-(void)doCancel{
    

    [_searchbar setText:@""];
    
    [_searchbar resignFirstResponder];
    [_searchbar setShowsCancelButton:YES];

    [_searchbar setShowsCancelButton:NO animated:YES];
    [tbDataBank reloadData];
    
    UIView *view = [_searchbar viewWithTag:SEATCHBTN_TAG]; //移除searchbtn
    if (view) {
        [view setHidden:YES];
    }
    
    [self sendViewSignal:[DYBDtaBankSearchView RECOVERBAR] withObject:nil from:self];
    
    [((DYBBaseViewController *)[self superCon]).rightButton setHidden:NO];
}

-(void)hideKeyBoard{
    
    [_searchbar setShowsCancelButton:NO animated:YES];
    [_searchbar setText:@""];
    [_searchbar resignFirstResponder];
    
    UIView *view = [_searchbar viewWithTag:SEATCHBTN_TAG]; //移除searchbtn
    if (view) {
        [view setHidden:YES];
    }
    [self setFrame:CGRectMake(0.0f, 0.0f, 320.0f, SEARCHBAT_HIGH)];
    [tbDataBank setHidden:YES];
}

-(void)handleViewSignal_DragonUISearchBar:(DragonViewSignal *)signal{
    
    
    if ([signal is:[DragonUISearchBar BEGINEDITING]]) {
        
        [arraySearchResult removeAllObjects]; //清除内容

         [((DYBBaseViewController *)[self superCon]).rightButton setHidden:YES];
        UIButton *btnSearch = (UIButton *)[_searchbar viewWithTag:SEATCHBTN_TAG];
       
        if (btnSearch) {
            [btnSearch setHidden:NO];
        }
        
        DragonUISearchBar *obj = (DragonUISearchBar *)[signal object];
        [obj setShowsCancelButton:YES];
        
//        [tbDataBank setHidden:NO];
//        [tbDataBank reloadData];
        
       
        [self sendViewSignal:[DYBDtaBankSearchView BEGINEDITING] withObject:nil from:self];
       

        
        [tbDataBank setBackgroundColor:[UIColor clearColor]];
        
    }else if([signal is:[DragonUISearchBar CANCEL]]){
        
        DragonUISearchBar *obj = (DragonUISearchBar *)[signal object];
        [obj resignFirstResponder];
        [obj setShowsCancelButton:YES];
        [self sendViewSignal:[DYBDtaBankSearchView RECOVERBAR] withObject:nil from:self];
        
         [((DYBBaseViewController *)[self superCon]).rightButton setHidden:NO];
        
    }else if([signal is:[DragonUISearchBar SEARCH]]){
        
        DragonUISearchBar *obj = (DragonUISearchBar *)[signal object];
        [obj resignFirstResponder];
        [obj setShowsCancelButton:YES];
        [self addOBjToArray:(NSString *)[signal object]];
        
        [tbDataBank reloadData];
        
        
    }else if ([signal is:[DragonUISearchBar CHANGEWORD]]){
    
        [self addOBjToArray:(NSString *)[signal object]];
        
    }
    
    
}

//tag_info
-(void)addOBjToArray:(NSString *)signal{ //全部转小写搜索

    
    [arraySearchResult removeAllObjects]; //移除全部结果，重新加入
    
    NSString *obj = [signal lowercaseString];
    for (NSDictionary *dict in arrayResourcesList) {
        
        //文件夹，文件判断
//        NSString *title = [[dict objectForKey:@"file_path"] lowercaseString];
//        NSRange range1 = [title rangeOfString:obj];
//        if (range1.length >  0 ) { // 加强判断 有风险
//            
//            if (![arraySearchResult containsObject:dict] ) {
//                [arraySearchResult addObject:dict];
//            }
//        }
        
        //标签判断
        NSString *strTag = [dict objectForKey:@"tag_info"];
        NSRange range2 = [strTag rangeOfString:obj];
        if (range2.length >  0 ) { // 加强判断 有风险
            
            if (![arraySearchResult containsObject:dict] ) {
                [arraySearchResult addObject:dict];
            }
        }
        
        
        //标签判断
        NSString *title3 = [[dict objectForKey:@"title"] lowercaseString];
        NSRange range3 = [title3 rangeOfString:obj];
        if (range3.length >  0 ) { // 加强判断 有风险
            
            if (![arraySearchResult containsObject:dict] ) {
                [arraySearchResult addObject:dict];
            }
        }
        
    }
    if (obj.length > 0) {

        
    }else{
        
        [arraySearchResult removeAllObjects];
    }
    
//    if (arraySearchResult.count > 0 &&tbDataBank.hidden ) {
    
        [self sendViewSignal:[DYBDtaBankSearchView FIRSTTOUCH] withObject:nil from:self];
        
        
//    }
    [tbDataBank setHidden:NO];
    [tbDataBank reloadData];

}

- (void)handleViewSignal_DragonUITableView:(DragonViewSignal *)signal{
    
    
    if ([signal is:[DragonUITableView TABLENUMROWINSEC]])//numberOfRowsInSection
    {
        NSNumber *s = [NSNumber numberWithInteger:arraySearchResult.count];
        [signal setReturnValue:s];
        
    }else if ([signal is:[DragonUITableView TABLENUMOFSEC]])//numberOfSectionsInTableView
    {
        NSNumber *s = [NSNumber numberWithInteger:1];
        [signal setReturnValue:s];
        
    }
    else if ([signal is:[DragonUITableView TABLEHEIGHTFORROW]])//heightForRowAtIndexPath
    {
        
        
        
        [signal setReturnValue:[NSNumber numberWithInteger:CELLHIGHT]];
    }
    else if ([signal is:[DragonUITableView TABLETITLEFORHEADERINSECTION]])//titleForHeaderInSection
    {
        [signal setReturnValue:nil];
        
    }
    else if ([signal is:[DragonUITableView TABLEVIEWFORHEADERINSECTION]])//viewForHeaderInSection
    {
        [signal setReturnValue:nil];
        
    }//
    else if ([signal is:[DragonUITableView TABLETHEIGHTFORHEADERINSECTION]])//heightForHeaderInSection
    {
        [signal setReturnValue:[NSNumber numberWithFloat:0.0]];
    }
    else if ([signal is:[DragonUITableView TABLECELLFORROW]])//cell
    {
        NSDictionary *dict = (NSDictionary *)[signal object];
     
        NSIndexPath *indexPath = [dict objectForKey:@"indexPath"];
        
        
        DYBDataBankListCell *cell = [[DYBDataBankListCell alloc]initWithFrame:CGRectMake(0.0f, 0.0f, 320.0f, CELLHIGHT)];
        
        [cell setIndexPath:indexPath];
        [cell setTb:tbDataBank];
//        [cell setSendMegTarget:self];
        
        if ([[self superCon] isKindOfClass:[DYBDataBankShareViewController class]]) {
            
            [cell setCellType:_iCellType];
            [cell setBtnType:_iBtnType];
        }else{
        
            [cell setCellType:0];
        }
        [cell initViewCell_dict:[arraySearchResult objectAtIndex:indexPath.row]];
        
        [arrayCell addObject:cell];
        
        RELEASE(cell);
        
        if (indexPath.row%2 == 0) {
            [cell setSwipViewBackColor:[UIColor colorWithRed:252/255.0f green:252/255.0f blue:252/255.0f alpha:1.0f]];
        }else{
            [cell setSwipViewBackColor:[UIColor colorWithRed:248/255.0f green:248/255.0f blue:248/255.0f alpha:1.0f]];
            
        }
        [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
        [signal setReturnValue:cell];
        
        
    }else if ([signal is:[DragonUITableView TABLEDIDSELECT]])//选中cell
    {
        
        
        
        NSDictionary *dict = (NSDictionary *)[signal object];
        NSIndexPath *indexPath = [dict objectForKey:@"indexPath"];
        NSDictionary *dictResult = [arraySearchResult objectAtIndex:indexPath.row];
        
        
        BOOL isFolder = [[dictResult objectForKey:@"is_dir"] boolValue];
        
        
        
        
        if (!isFolder) {  //文件暂时不好浏览
            
            BOOL bShow = [DYBShareinstaceDelegate noShowTypeFileTarget:self type:[dictResult objectForKey:@"type"]];
            
            if (!bShow) {
                return;
            }
            
            
            DYBDataBankFileDetailViewController *showFile = [[DYBDataBankFileDetailViewController alloc]init];
            showFile.dictFileInfo = dictResult;
            showFile.targetObj = self;
            [((DYBBaseViewController *)[self superCon]).drNavigationController pushViewController:showFile animated:YES];
            RELEASE(showFile);
            return ;
        }
        
        
        DYBDataBankChildrenListViewController *childerListController = [[DYBDataBankChildrenListViewController alloc]init];
        
        
        [childerListController setStrTitle:[dictResult objectForKey:@"title"]];
        [childerListController setFolderID:[dictResult objectForKey:@"id"]];
        [((DYBBaseViewController *)[self superCon]).drNavigationController pushViewController:childerListController animated:YES];
        [childerListController release];

        
        
//        NSDictionary *dict = (NSDictionary *)[signal object];
//        [self performSelector:@selector(cancelSelect) withObject:nil afterDelay:0.5];
//        
//        NSIndexPath *indexPath = [dict objectForKey:@"indexPath"];
//        DYBDataBankChildrenListViewController *childerListController = [[DYBDataBankChildrenListViewController alloc]init];
//        [childerListController setFolderID:[[arrayResourcesList objectAtIndex:indexPath.row] objectForKey:@"id"]];
//        [_VC.drNavigationController pushViewController:childerListController animated:YES];
//        [childerListController release];

     
<<<<<<< .mine
=======
    }else if ([signal is:[DragonUITableView TABLESCROLLVIEWDIDENDDRAGGING]])//滚动停止
    {

>>>>>>> .r9748
    }else if ([signal is:[DragonUITableView TABLESCROLLVIEWDIDSCROLL]])
    {
//        [tbDataBank tableViewDidDragging];
        if (_searchbar) {
            
            [_searchbar resignFirstResponder];
            [_searchbar setShowsCancelButton:YES];
        }
        
    }
    else if ([signal is:[DragonUITableView TABLESCROLLVIEWDIDENDDRAGGING]])
    {
        DLogInfo(@"1111");
        
    }else if ([signal is:[DragonUITableView TAbLEVIEWSCROLLUP]]){
        
        [tbDataBank StretchingUpOrDown:0];
        [DYBShareinstaceDelegate opeartionTabBarShow:YES];
        
    }else if ([signal is:[DragonUITableView TAbLEVIEWSCROLLDOWN]]){
        
        [tbDataBank StretchingUpOrDown:1];
        [DYBShareinstaceDelegate opeartionTabBarShow:NO];
    }else if ([signal is:[DragonUITableView TABLEVIEWUPDATA]])
    {
    
        [tbDataBank reloadData:NO];
    
    }
    
    
}


-(void)handleViewSignal_DYBDtaBankSearchView_TOUCHSIGLEBTN:(DragonViewSignal *)signal{

    if ([signal is:[DYBDtaBankSearchView TOUCHSIGLEBTN]]) {
        NSDictionary *dict = (NSDictionary *)[signal object];
        UIButton *btn = (UIButton *)[dict objectForKey:@"btn"];
        DLogInfo(@"tag -- %d",btn.tag);
        int row = [[dict objectForKey:@"row"] integerValue];
        
        [_searchbar resignFirstResponder];
        [_searchbar setShowsCancelButton:YES animated:NO];

        DYBDataBankListCell *cell = [arrayCell objectAtIndex:row]; //关闭 cell
        [cell closeCell];
        
        switch (btn.tag) {
                
            case BTNTAG_SHARE:
                
            {
                
                
                DYBDataBankShareEnterView * shareView = [[DYBDataBankShareEnterView alloc]initWithFrame:CGRectMake(0.0f, self.frame.size.height - 60 * 4.0f , 320.0f, 60 * 4.0f) target:self info:[arraySearchResult objectAtIndex:row] arrayFolderList:nil index:row];
                
                [self addSubview:shareView];
                RELEASE(shareView);
                
                
            }
                break;
            case BTNTAG_CHANGE:
            {
                
                DYBDataBankChildrenListViewController *childr = [[DYBDataBankChildrenListViewController alloc]init];
                childr.folderID = @"";
                childr.strFromDir = [NSString stringWithFormat:@"%@",[[arraySearchResult objectAtIndex:row] objectForKey:@"id"]];
                childr.bChangeFolder = YES;
                [((DYBBaseViewController *)[self superCon]).drNavigationController pushViewController:childr animated:YES];
                RELEASE(childr);
            }
                
                break;
            case BTNTAG_RENAME:
            {
                NSString *title = [[arraySearchResult objectAtIndex:row] objectForKey:@"title"];
                [DYBShareinstaceDelegate addConfirmViewTitle:@"" MSG:title targetView:APPDELEGATE.window targetObj:self btnType:BTNTAG_RENAME rowNum:[NSString stringWithFormat:@"%d",row]];
            }
                break;
            case BTNTAG_DOWNLOAD:{
                
                                
                DYBDataBankDownloadManageViewController *downLoad = [DYBDataBankDownloadManageViewController shareDownLoadInstance];
                NSDictionary *dict = [arraySearchResult objectAtIndex:row];
                [downLoad insertCell:dict];
                
                for (DYBDataBankListCell* cell in _arrayViewCell) { //上层view 添加标记
                    
                    if ([[dict objectForKey:@"file_urlencode"] isEqual:cell.strTag]) {
                        
                        [cell.imageViewDown setHidden:NO];
                    }
                }
                
                for (DYBDataBankListCell* cell in arrayCell) { //本层view 添加标记
                    
                    if ([[dict objectForKey:@"file_urlencode"] isEqual:cell.strTag]) {
                        
                        [cell.imageViewDown setHidden:NO];
                    }
                }
                

                
            }
                break;
            case BTNTAG_DEL:
            {
                
                [DYBShareinstaceDelegate addConfirmViewTitle:@"" MSG:@"真的要删除吗？" targetView:APPDELEGATE.window targetObj:self btnType:BTNTAG_DEL rowNum:[NSString stringWithFormat:@"%d",row]];
            }
                break;
                
            default:
                break;
        }
        
    }


}
-(void)handleViewSignal_DYBDataBankShotView:(DragonViewSignal *)signal{
    
    DLogInfo(@"ddddd");
    if ([signal is:[DYBDataBankShotView LEFT]]) {
        
    }
    if ([signal is:[DYBDataBankShotView RIGHT]]) {
        
        NSDictionary *dict = (NSDictionary *)[signal object];
        NSString *text = [dict objectForKey:@"text"];
        NSString *type = [dict objectForKey:@"type"];
        NSNumber *row = [dict objectForKey:@"rowNum"];
        NSDictionary *dictResult = [arraySearchResult objectAtIndex:[row integerValue]];
        NSString *fileURL = [dictResult objectForKey:@"file_path"];
        switch ([type integerValue]) {
            case BTNTAG_DEL:{
                
                DragonRequest *request = [DYBHttpMethod document_deldoc_doc:fileURL indexDataBack:[NSString stringWithFormat:@"%@",row] isAlert:YES receive:self];
                
                
                [request setTag:BTNTAG_DEL];
                
            }
                break;
                
            case BTNTAG_CHANGE:
                
                
                break;
                
            case BTNTAG_RENAME:
            {
                
                NSString *doc_id = [dictResult objectForKey:@"id"];
                NSString *dir = [dictResult objectForKey:@"dir"];
                
                DragonRequest *request = [DYBHttpMethod document_rename_doc_id:doc_id name:text is_dir:dir indexDataBank:[NSString stringWithFormat:@"%@",row]  sAlert:YES receive:self ];
                
                
                [request setTag:BTNTAG_RENAME];
            }
                break;
            case BTNTAG_SHARE:
                
                break;
                
            default:
                break;
        }
        
        
        
    }
}


#pragma mark- HTTP
- (void)handleRequest:(DragonRequest *)request receiveObj:(id)receiveObj
{
    
    
    JsonResponse *response = (JsonResponse *)receiveObj;
    if (request.tag == BTNTAG_DEL) {
        
        if ([[response.data objectForKey:@"result"] integerValue]) {
            
            DLogInfo(@"dddd");
            int index = [[response.data objectForKey:@"indexDataBack"] integerValue];

            [arraySearchResult removeObjectAtIndex:index];
            [tbDataBank reloadData];
            
            [DYBShareinstaceDelegate popViewText:@"删除成功！" target:self hideTime:.5f isRelease:YES mode:DRAGONPOPALERTVIEWINDICATOR];
        }
        
        
        
        
    }if (request.tag == BTNTAG_RENAME) {
        
        if ([[response.data objectForKey:@"result"] integerValue]) {
            
 
            // 修改本地的名称
            NSString *strIndex = [response.data objectForKey:@"indexDataBack"];
            NSString *name = [response.data objectForKey:@"new_name"];
            
            NSMutableDictionary *dict  = [arraySearchResult objectAtIndex:[strIndex integerValue]];
            [dict setValue:name forKey:@"title"];
            [arraySearchResult addObject:dict];
           
            [tbDataBank reloadData];

            
            [DYBShareinstaceDelegate popViewText:@"重命名成功！" target:self hideTime:.5f isRelease:YES mode:DRAGONPOPALERTVIEWINDICATOR];
        }else{
        
            [DYBShareinstaceDelegate popViewText:@"重命名失败！" target:self hideTime:.5f isRelease:YES mode:DRAGONPOPALERTVIEWINDICATOR];
        
        }
        
        
        
        
    }
    
    else if (request.tag ==1){
        
        
//        if ([response response] ==khttpsucceedCode)
//        {
//            
//            RELEASEDICTARRAYOBJ(arrayFolderList);
//            [arrayCellView removeAllObjects];
//            
//            NSArray *list=[response.data objectForKey:@"list"];
//            
//            
//            
//            DLogInfo(@"list -- %@",list);
//            
//            arrayFolderList = [[NSMutableArray alloc]initWithArray:list];
//            searchView.arrayResourcesList = arrayFolderList;
//            
//            for (int i = 0; i < arrayFolderList.count; i++) {
//                NSDictionary *dict = [arrayFolderList objectAtIndex:i];
//                DYBDataBankListCell *cell = [[DYBDataBankListCell alloc] init];
//                DLogInfo(@"dict  --- %@ iiiiii,%d",dict,i);
//                NSIndexPath *indexPath = [NSIndexPath indexPathForRow:i inSection:0];
//                [cell setIndexPath:indexPath];
//                [cell setTb:tbDataBank];
//                [cell setSendMegTarget:self];
//                [cell setCellType:0];
//                [cell initViewCell_dict:dict];
//                [arrayCellView addObject:cell];
//                
//                
//            }
//            
//            tbDataBank._muA_differHeightCellView = [[NSMutableArray alloc]initWithArray:arrayCellView];
//            [tbDataBank reloadData];
//            
//        }
//        if (arrayCellView.count > 0) { //显示 分割线颜色
//            
//        }
    }
//    [tbDataBank.headerView changeState:VIEWTYPEHEADER];
}



-(void)cancelSelect{
    
    [tbDataBank deselectRowAtIndexPath:[tbDataBank indexPathForSelectedRow] animated:YES];

}



#pragma  Operation search bar 

-(void)setSearchFirstResponder{

    [_searchbar resignFirstResponder];
    
}

-(void)isShowCanelButton:(BOOL)key{

    [_searchbar setShowsCancelButton:key];
}


#pragma UISearchDelegate Function


- (void)dealloc
{
    RELEASE(_VC);
    _VC = nil;
    
    for (DYBDataBankListCell *view in _arrayViewCell ) { //强制释放array中的对象
        
        //        [arrayCellView removeObject:view];
        //        [view removeFromSuperview];
        [view release];
        
        view  = nil;
        
    }

    RELEASEDICTARRAYOBJ(_arrayViewCell);
    
    RELEASEDICTARRAYOBJ(arraySearchResult);
    RELEASEDICTARRAYOBJ(arrContent);
    RELEASEDICTARRAYOBJ(arrName);
    RELEASEDICTARRAYOBJ(arrTag);
    RELEASEDICTARRAYOBJ(dictSearchResult);
    [super dealloc];
}

@end
