//
//  DYBSendPrivateLetterViewController.m
//  DYiBan
//
//  Created by zhangchao on 13-8-13.
//  Copyright (c) 2013年 ZzL. All rights reserved.
//

#import "DYBSendPrivateLetterViewController.h"
#import "UITableView+property.h"
#import "DYBCellForSendPrivateLetter.h"
#import "chat.h"
#import "UIView+DragonCategory.h"
#import "NSString+Count.h"
#import "UIView+Animations.h"
#import "ext.h"
#import "UIImage+DragonCategory.h"
#import "Dragon_UIUpdateView.h"
#import "UserSettingMode.h"
#import "Dragon_Device.h"
#import "DYBRequest.h"
#import "NSString+Count.h"

@interface DYBSendPrivateLetterViewController ()

@end

@implementation DYBSendPrivateLetterViewController

@synthesize model=_model;

#pragma mark- ViewController信号
- (void)handleViewSignal_DragonViewController:(DragonViewSignal *)signal
{
    [super handleViewSignal:signal];
    
    if ([signal is:DragonViewController.CREATE_VIEWS]) {
                       
        {
            _v_bottomView=[[UIView alloc]initWithFrame:CGRectMake(0, self.frameHeight-50, self.view.frame.size.width, 50)];
            _v_bottomView.backgroundColor=[DragonCommentMethod color:255 green:255 blue:255 alpha:0.8];
            [self.view addSubview:_v_bottomView];
            RELEASE(_v_bottomView);
        }
        
        {
            UIImage *img= [UIImage imageNamed:@"sx_02"];
            _bt_add = [[DragonUIButton alloc] initWithFrame:CGRectMake(5, 0, img.size.width/2, img.size.height/2)];
            _bt_add.tag=-1;
            [_bt_add addSignal:[DragonUIButton TOUCH_UP_INSIDE] forControlEvents:UIControlEventTouchUpInside];
            [_bt_add setImage:img forState:UIControlStateNormal];
//            [_bt_add setImage:[UIImage imageNamed:@"btn_mainmenu_hilight"] forState:UIControlStateHighlighted];
            [_v_bottomView addSubview:_bt_add];
            [_bt_add changePosInSuperViewWithAlignment:1];
            _bt_add.showsTouchWhenHighlighted=YES;
            _bt_add.backgroundColor=[UIColor clearColor];
            RELEASE(_bt_add);
        }
        
        {
            UIImage *img= [UIImage imageNamed:@"sx_03"];
            _bt_send = [[DragonUIButton alloc] initWithFrame:CGRectMake(_v_bottomView.frame.size.width-5-img.size.width/2, 0, img.size.width/2, img.size.height/2)];
            _bt_send.tag=-2;
            [_bt_send addSignal:[DragonUIButton TOUCH_UP_INSIDE] forControlEvents:UIControlEventTouchUpInside];
            [_bt_send setImage:img forState:UIControlStateNormal];
            //            [_bt_add setImage:[UIImage imageNamed:@"btn_mainmenu_hilight"] forState:UIControlStateHighlighted];
            [_v_bottomView addSubview:_bt_send];
            [_bt_send changePosInSuperViewWithAlignment:1];
            _bt_send.showsTouchWhenHighlighted=YES;
            _bt_send.backgroundColor=[UIColor clearColor];

            RELEASE(_bt_send);
        }
        
        {
            _v_inputV=[[DYBCustomInputView alloc]initWithFrame:CGRectMake(_bt_add.frame.origin.x+_bt_add.frame.size.width, 0, 195, _v_bottomView.frame.size.height-10) placeHolder:@""];
            _v_inputV.backgroundColor=[UIColor whiteColor];
            _v_inputV.layer.masksToBounds=YES;
            _v_inputV.layer.cornerRadius=3;
            _v_inputV.layer.borderWidth=1;
            _v_inputV.layer.borderColor=ColorCellSepL.CGColor;
            [_v_bottomView addSubview:_v_inputV];
            [_v_inputV changePosInSuperViewWithAlignment:1];
            _v_inputV._originFrame=CGRectMake(_v_inputV.frame.origin.x, _v_inputV.frame.origin.y, _v_inputV.frame.size.width, _v_inputV.frame.size.height);
            RELEASE(_v_inputV);
            [_v_inputV addkeyboardNotice];
            [_v_inputV.textV becomeFirstResponder];
        }
        
        [self creatTbv];
        
        [self.view bringSubviewToFront:_v_bottomView];
                
//        [DragonUIKeyboard sharedInstace];
//        [self observeNotification:[DragonUIKeyboard HEIGHT_CHANGED]];
//        [self observeNotification:[DragonUIKeyboard SHOWN]];
//        [self observeNotification:[DragonUIKeyboard HIDDEN]];
        
        {//HTTP
            [self.view setUserInteractionEnabled:NO];
            
            DragonRequest *request = [DYBHttpMethod message_chat_sixin:1 pageNum:_tbv.i_pageNums type:@"0" userid:_model.id maxid:@"0" last_id:@"0" isAlert:YES receive:self];
            [request setTag:1];
            
            if (!request) {//无网路
                //                [_tbv_friends_myConcern_RecentContacts.footerView changeState:VIEWTYPEFOOTER];
            }
        }
        
    }else if ([signal is:DragonViewController.WILL_APPEAR]){
        [self.headview setTitle: self.model.name];
        [self backImgType:0];
        
        if(!_imgV_headView){
            _imgV_headView = [[DragonUIImageView alloc] initWithFrame:CGRectMake(self.headview.frame.size.width-45, 15, 30, 30) backgroundColor:[UIColor clearColor] image:nil isAdjustSizeByImgSize:NO userInteractionEnabled:NO masksToBounds:NO cornerRadius:-1 borderWidth:-1 borderColor:Nil superView:self.headview Alignment:1 contentMode:UIViewContentModeScaleAspectFit stretchableImageWithLeftCapWidth:-1 topCapHeight:-1];
            
            [_imgV_headView setImgWithUrl:self.model.pic ];
            RELEASE(_imgV_headView);
            
            {//遮罩
                UIImage *img=[UIImage imageNamed:@"midface_mask_high"];
                DragonUIImageView *imgV=[[DragonUIImageView alloc]initWithFrame:CGRectMake(0,0, 30,30) backgroundColor:[UIColor clearColor] image:img isAdjustSizeByImgSize:NO userInteractionEnabled:NO masksToBounds:NO cornerRadius:-1 borderWidth:-1 borderColor:Nil superView:_imgV_headView Alignment:-1 contentMode:UIViewContentModeScaleAspectFit stretchableImageWithLeftCapWidth:-1 topCapHeight:-1];
                RELEASE(imgV);
            }
           
        }
        
    }else if ([signal is:DragonViewController.DID_DISAPPEAR]){
        //        RELEASEVIEW(_tbv);//界面不显示时彻底释放TBV,已释放cell
        
    }else if ([signal is:[DragonViewController LAYOUT_VIEWS]])
    {
        
    }else if ([signal is:[DragonViewController FREE_DATAS]])//dealloc时回调,先释放数据
    {
        [_tbv releaseDataResource];
        
    }else if ([signal is:[DragonViewController DELETE_VIEWS]]){//dealloc时回调,再释放视图
        
        REMOVEFROMSUPERVIEW(_imgV_headView);
        
        [_tbv release_muA_differHeightCellView];
        
        RELEASEVIEW(_tbv);//界面不显示时彻底释放TBV,已释放cell
        
    }
    
}

#pragma mark-
-(void)creatTbv{
    if (!_tbv) {
        _tbv = [[DragonUITableView alloc] initWithFrame:CGRectMake(0, self.headHeight, CGRectGetWidth(self.view.bounds), CGRectGetHeight(self.view.bounds)-self.headHeight-kH_StateBar-_v_bottomView.frame.size.height) isNeedUpdate:YES];
//        _tbv._cellH=65;
        [_tbv setTableViewType:DTableViewSlime];
        [self.view addSubview:_tbv];
        _tbv.backgroundColor=/*[UIColor colorWithRed:248 green:248 blue:255 alpha:1]*/ [UIColor clearColor];//248 248 255
        _tbv.tag=-1;
        _tbv.i_pageNums=10;
        _tbv._page=1;
        _tbv.separatorStyle=UITableViewCellSeparatorStyleNone;
//        {
//            UIView *v=[[UIView alloc]initWithFrame:CGRectMake(0, 0, _tbv.frame.size.width, _v_bottomView.frame.size.height)];
//            v.backgroundColor=[UIColor clearColor];
//            _tbv.tableFooterView=v;
//            RELEASE(v);
//
//        }
        RELEASE(_tbv);
    }
    
}

#pragma mark- 接受tbv信号

static NSString *cellName = @"cellName";//前4个cell

- (void)handleViewSignal_DragonUITableView:(DragonViewSignal *)signal
{
    if ([signal is:[DragonUITableView TABLENUMROWINSEC]])//numberOfRowsInSection
    {
        NSDictionary *dict = (NSDictionary *)[signal object];
        UITableView *tableView = [dict objectForKey:@"tableView"];
        NSInteger section = [[dict objectForKey:@"section"] integerValue];
        
        if ([tableView isOneSection]) {/*一个section模式*/
            NSNumber *s = [NSNumber numberWithInteger:tableView.muA_singelSectionData.count];
            [signal setReturnValue:s];
        }else if(tableView.muA_allSectionKeys.count>section){
            NSString *key = [tableView.muA_allSectionKeys objectAtIndex:section];
            NSArray *array = [tableView.muD_allSectionValues objectForKey:key];
            NSNumber *s = [NSNumber numberWithInteger:array.count];
            [signal setReturnValue:s];
        }
        
    }else if ([signal is:[DragonUITableView TABLENUMOFSEC]])//numberOfSectionsInTableView
    {
        NSDictionary *dict = (NSDictionary *)[signal object];
        UITableView *tableView = [dict objectForKey:@"tableView"];
        
        if ([tableView isOneSection]) {/*一个section模式*/
            NSNumber *s = [NSNumber numberWithInteger:1];
            [signal setReturnValue:s];
        }else{
            NSNumber *s = [NSNumber numberWithInteger:tableView.muA_allSectionKeys.count];
            [signal setReturnValue:s];
        }
        
    }
    else if ([signal is:[DragonUITableView TABLEHEIGHTFORROW]])//heightForRowAtIndexPath  暂时把每个cell保存,后期有时间优化为只保存高度,返回cell时再异步计算cell的视图,目前刷新后所有cell的view都要重新创建
    {
        NSDictionary *dict = (NSDictionary *)[signal object];
        NSIndexPath *indexPath = [dict objectForKey:@"indexPath"];
        DragonUITableView *tableView = [dict objectForKey:@"tableView"];
        
        DLogInfo(@"%@",indexPath);
        
        if(indexPath.row==tableView._muA_differHeightCellView.count/*只创建没计算过的cell*/ || !tableView._muA_differHeightCellView || [tableView._muA_differHeightCellView count]==0 || [[tableView._muA_differHeightCellView objectAtIndex:indexPath.row] isKindOfClass:[NSNull class]]/*反序插入cell*/)
        {//私信列表的cell
            
            DYBCellForSendPrivateLetter *cell = [[[DYBCellForSendPrivateLetter alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellName] autorelease];
            [cell setContent:[_tbv.muA_singelSectionData objectAtIndex:indexPath.row] indexPath:indexPath tbv:tableView];
            
            if (!tableView._muA_differHeightCellView) {
                tableView._muA_differHeightCellView=[NSMutableArray arrayWithCapacity:10];
            }
            if (![tableView._muA_differHeightCellView containsObject:cell]) {
                if (tableView._muA_differHeightCellView.count==indexPath.row) {//
                    [tableView._muA_differHeightCellView addObject:cell];
                }else if([[tableView._muA_differHeightCellView objectAtIndex:indexPath.row] isKindOfClass:[NSNull class]]){//替换之前插入的null对象
                    [tableView._muA_differHeightCellView replaceObjectAtIndex:indexPath.row withObject:cell];
                }
                
                if ([tableView isOneSection]&&indexPath.row==tableView.i_pageNums-1 && !tableView.b_isreloadOver /*&& tableView._page==1*/) {//判断 单section下 新页是否reload完毕,如果完毕就滚到新页的最下边的cell
//                    NSMutableDictionary *dict = [NSMutableDictionary dictionaryWithObjectsAndKeys:tableView, @"tableView", indexPath, @"indexPath", nil];
//                    [tableView sendViewSignal:[DragonUITableView TAbLEVIERELOADOVER] withObject:dict];
                    tableView.b_isreloadOver=YES;

                    [tableView scrollToRowAtIndexPath:indexPath atScrollPosition:UITableViewScrollPositionNone animated:NO];
                }
            }
            
            NSNumber *s = [NSNumber numberWithInteger:cell.frame.size.height];
            [signal setReturnValue:s];
        }else{//之前计算过的cell
            NSNumber *s = [NSNumber numberWithInteger:((DYBCellForSendPrivateLetter *)[tableView._muA_differHeightCellView objectAtIndex:indexPath.row]).frame.size.height];
            [signal setReturnValue:s];
        }
        
        if ([tableView isOneSection]&&indexPath.row==tableView.muA_singelSectionData.count-1 && !tableView.b_isreloadOver) {//加载完最后一个cell
            //                NSMutableDictionary *dict = [NSMutableDictionary dictionaryWithObjectsAndKeys:tableView, @"tableView", indexPath, @"indexPath", nil];
            //                [tableView sendViewSignal:[DragonUITableView TAbLEVIERELOADOVER] withObject:dict];
            tableView.b_isreloadOver=YES;
            
            [tableView scrollToRowAtIndexPath:indexPath atScrollPosition:UITableViewScrollPositionNone animated:YES];
        }
        
    }
    else if ([signal is:[DragonUITableView TABLETITLEFORHEADERINSECTION]])//titleForHeaderInSection
    {
        
    }
    else if ([signal is:[DragonUITableView TABLEVIEWFORHEADERINSECTION]])//viewForHeaderInSection
    {
        //        NSDictionary *dict = (NSDictionary *)[signal object];
        //        UITableView *tableView = [dict objectForKey:@"tableView"];
        
        [signal setReturnValue:nil];
        
    }//
    else if ([signal is:[DragonUITableView TABLETHEIGHTFORHEADERINSECTION]])//heightForHeaderInSection
    {
        [signal setReturnValue:[NSNumber numberWithFloat:0.0]];
        
    }
    else if ([signal is:[DragonUITableView TABLECELLFORROW]])//cell  只返回显示的cell
    {
        NSDictionary *dict = (NSDictionary *)[signal object];
        UITableView *tableview = [dict objectForKey:@"tableView"];
        NSIndexPath *indexPath = [dict objectForKey:@"indexPath"];
        
        UITableViewCell *cell=[tableview dequeueReusableCellWithIdentifier:cellName];
        cell=((UITableViewCell *)[tableview._muA_differHeightCellView objectAtIndex:indexPath.row]);
        
        [signal setReturnValue:cell];
        
    }else if ([signal is:[DragonUITableView TABLEDIDSELECT]])//选中cell
    {
        NSDictionary *dict = (NSDictionary *)[signal object];
        
    }
    else if ([signal is:[DragonUITableView TAbLEVIEWLODATA]])//
    {
        DragonUITableView *tableView = (DragonUITableView *)[signal source];
        [tableView reloadData:YES];//避免 获取第一页后 滚动到最下边时 收到 加载更多信号后 没重置顶部刷新view
        tableView.b_isreloadOver=YES;
    }
    else if ([signal is:[DragonUITableView TABLEVIEWUPDATA]])//
    {
        
        DragonUITableView *tableView = (DragonUITableView *)[signal source];
        
        {//HTTP请求已加入的班级列表
            [self.view setUserInteractionEnabled:NO];
            
            DragonRequest *request = [DYBHttpMethod message_chat_sixin:++tableView._page pageNum:tableView.i_pageNums type:@"0" userid:_model.id maxid:@"0" last_id:((chat *)[_tbv.muA_singelSectionData objectAtIndex:0]).id isAlert:YES receive:self];
            [request setTag:2];
            
            if (!request) {//无网路
                [tableView setUpdateState:DUpdateStateNomal];
            }
        }
    }
    
    else if ([signal is:[DragonUITableView TAbLEVIEWSCROLLUP]]){//上滑
        DragonUITableView *tableView = (DragonUITableView *)[signal source];

//        [_tbv StretchingUpOrDown:0];
//        [[DYBUITabbarViewController sharedInstace] hideTabBar:YES animated:YES];
        if(tableView.b_isreloadOver && tableView.b_Dragging){//tbv被拖拽时才隐藏键盘
            [_v_inputV.textV resignFirstResponder];
        }
        
    }else if ([signal is:[DragonUITableView TAbLEVIEWSCROLLDOWN]]){//下滑
        DragonUITableView *tableView = (DragonUITableView *)[signal source];

//        [_tbv StretchingUpOrDown:1];
//        [[DYBUITabbarViewController sharedInstace] hideTabBar:NO animated:YES];
        if(tableView.b_isreloadOver && tableView.b_Dragging){//tbv被拖拽时才隐藏键盘
            [_v_inputV.textV resignFirstResponder];
        }
    }else if ([signal is:[DragonUITableView TAbLEVIERELOADOVER]])//reload完毕
    {
//        NSDictionary *dict = (NSDictionary *)[signal object];
//        NSIndexPath *indexPath = [dict objectForKey:@"indexPath"];
//        UITableView *tableView = [dict objectForKey:@"tableView"];
        
//        [_v_inputV.textV becomeFirstResponder];
    }
}

#pragma mark- 只接受UITextView信号
- (void)handleViewSignal_DragonUITextView:(DragonViewSignal *)signal
{
    if ([signal is:[DragonUITextView TEXTVIEWSHOULDBEGINEDITING]])//textViewShouldBeginEditing
    {
        DLogInfo(@"");
    }else  if ([signal is:[DragonUITextView TEXTVIEWDIDBEGINEDITING]])//textViewDidBeginEditing
    {
        NSMutableDictionary *muD = (NSMutableDictionary *)[signal object];
        DragonUITextView *textView=[muD objectForKey:@"textView"];
//        [self.view bringSubviewToFront:_v_bottomView];
        
    }else  if ([signal is:[DragonUITextView TEXT_OVERFLOW]])//文字超长
    {
    }else  if ([signal is:[DragonUITextView TEXTVIEW]])//shouldChangeTextInRange
    {
        NSMutableDictionary *muD = (NSMutableDictionary *)[signal object];
        NSString *emString=[muD objectForKey:@"text"];
        
        if ([NSString isContainsEmoji:emString]) {
            
            [signal setReturnValue:[DragonViewSignal NO_VALUE]];
        }else if ([emString isEqualToString:@"\\"]){
            
            //            emString=[emString stringByAddingPercentEscapesUsingEncoding];
            //
            //            SJNoticeView *notice = [[[SJNoticeView alloc] init] autorelease];
            //            [notice setNoticeText:@"输入了非法字符 \\"];
            //            [signal setReturnValue:[DragonViewSignal NO_VALUE]];
        }
    }
    else  if ([signal is:[DragonUITextView TEXTVIEWDIDCHANGE]])//textViewDidChange
    {        
        NSMutableDictionary *muD = (NSMutableDictionary *)[signal object];
        DragonUITextView *textView=[muD objectForKey:@"textView"];
        
        CGSize size = [[textView text] sizeWithFont:[textView font]];
        
        // 2. 取出文字的高度
        int length = size.height;
        
        //3. 计算行数
        int colomNumber = textView.contentSize.height/length;
        
        [UIView beginAnimations:@"" context:nil];
        [UIView setAnimationDuration:0.3f];
        
        if (colomNumber<=2) {//最多高度扩展3行
            [_v_bottomView setFrame:CGRectMake(_v_bottomView.frame.origin.x, _v_bottomView._originFrame.origin.y-(colomNumber-1)*length, _v_bottomView.frame.size.width, _v_bottomView._originFrame.size.height+(colomNumber-1)*length)];
            [_bt_add setFrame:CGRectMake(_bt_add.frame.origin.x, _v_bottomView.frame.size.height-_bt_add.frame.size.height, _bt_add.frame.size.width, _bt_add.frame.size.height)];
            [_bt_send setFrame:CGRectMake(_bt_send.frame.origin.x, _v_bottomView.frame.size.height-_bt_send.frame.size.height, _bt_send.frame.size.width, _bt_send.frame.size.height)];
            
            [_v_inputV setFrame:CGRectMake(_v_inputV.frame.origin.x, _v_inputV._originFrame.origin.y, _v_inputV.frame.size.width, _v_bottomView.frame.size.height-10)];
        }
        
        [UIView commitAnimations];
        
        
    }else  if ([signal is:[DragonUITextView TEXTVIEWDIDCHANGESELECTION]])//textViewDidChangeSelection
    {
    }else  if ([signal is:[DragonUITextView TEXTVIEWSHOULDENDEDITING]])//textViewShouldEndEditing
    {
    }else  if ([signal is:[DragonUITextView TEXTVIEWDIDENDEDITING]])//textViewDidEndEditing
    {
    }
}

-(void)keyboardWillChangeFrame:(NSNotification*)notif{
#if __IPHONE_OS_VERSION_MIN_REQUIRED >= __IPHONE_3_2
    NSValue *keyboardBoundsValue = [[notif userInfo] objectForKey:UIKeyboardFrameEndUserInfoKey];
#else
    NSValue *keyboardBoundsValue = [[notif userInfo] objectForKey:UIKeyboardBoundsUserInfoKey];
#endif
    CGRect keyboardEndRect = [keyboardBoundsValue CGRectValue];//键盘改变后的frame
    
    if (_bt_add.selected /*|| self.view.userInteractionEnabled */) {
//        if (_bt_send.selected) {
//            [_v_inputV.textV setActive:YES];
//        }
        return;
    }
    
    [_v_bottomView moveViewToFrame:CGRectMake(_v_bottomView.frame.origin.x, keyboardEndRect.origin.y-_v_bottomView.frame.size.height-2-kH_StateBar, _v_bottomView.frame.size.width, _v_bottomView.frame.size.height) Duration:0.3 target:self AnimationsID:Nil AnimationDidStopSelector:Nil];
    
    [_tbv setFrame:CGRectMake(0, _tbv.frame.origin.y, _tbv.frame.size.width, _v_bottomView.frame.origin.y-_v_bottomView.frame.size.height)];

    _v_bottomView._originFrame=CGRectMake(_v_bottomView.frame.origin.x, _v_bottomView.frame.origin.y, _v_bottomView.frame.size.width, _v_bottomView.frame.size.height);
}

#pragma mark- 接受按钮信号
- (void)handleViewSignal_DragonUIButton:(DragonViewSignal *)signal{
    if ([signal is:[DragonUIButton TOUCH_UP_INSIDE]]) {
        DragonUIButton *bt=(DragonUIButton *)signal.source;
        
        if (bt)
        {
            switch (bt.tag) {
                case -1://加号
                {
                    bt.selected=!bt.selected;
                    
                    if (bt.selected) {
                        [_v_inputV.textV resignFirstResponder];
                        
                        if (!_v_threeBtView) {
                            _v_threeBtView=[[UIView alloc]initWithFrame:CGRectMake(0, self.frameHeight, self.view.frame.size.width, self.frameHeight-(_v_bottomView.frame.origin.y+_v_bottomView.frame.size.height))];
                            _v_threeBtView.backgroundColor=_v_bottomView.backgroundColor;
                            [self.view addSubview:_v_threeBtView];
                            RELEASE(_v_threeBtView);
                            
                            if (!_bt_face) {
                                UIImage *img= [UIImage imageNamed:@"sz_04"];
                                _bt_face = [[DragonUIButton alloc] initWithFrame:CGRectMake(25, 12, img.size.width/2, img.size.height/2)];
                                _bt_face.tag=-3;
                                [_bt_face addSignal:[DragonUIButton TOUCH_UP_INSIDE] forControlEvents:UIControlEventTouchUpInside];
                                [_bt_face setImage:img forState:UIControlStateNormal];
                                //            [_bt_add setImage:[UIImage imageNamed:@"btn_mainmenu_hilight"] forState:UIControlStateHighlighted];
                                [_v_threeBtView addSubview:_bt_face];
//                                [_bt_face changePosInSuperViewWithAlignment:1];
                                _bt_face.showsTouchWhenHighlighted=YES;
                                _bt_face.backgroundColor=[UIColor clearColor];
                                
                                RELEASE(_bt_face);
                            }
                            
                            if (!_bt_photo) {
                                UIImage *img= [UIImage imageNamed:@"sx_05"];
                                _bt_photo = [[DragonUIButton alloc] initWithFrame:CGRectMake(_bt_face.frame.origin.x+_bt_face.frame.size.width+40, _bt_face.frame.origin.y, img.size.width/2, img.size.height/2)];
                                _bt_photo.tag=-4;
                                [_bt_photo addSignal:[DragonUIButton TOUCH_UP_INSIDE] forControlEvents:UIControlEventTouchUpInside];
                                [_bt_photo setImage:img forState:UIControlStateNormal];
                                //            [_bt_add setImage:[UIImage imageNamed:@"btn_mainmenu_hilight"] forState:UIControlStateHighlighted];
                                [_v_threeBtView addSubview:_bt_photo];
                                //                                [_bt_face changePosInSuperViewWithAlignment:1];
                                _bt_photo.showsTouchWhenHighlighted=YES;
                                _bt_photo.backgroundColor=[UIColor clearColor];
                                
                                RELEASE(_bt_photo);
                            }
                            
                            if (!_bt_location) {
                                UIImage *img= [UIImage imageNamed:@"sx_06"];
                                _bt_location = [[DragonUIButton alloc] initWithFrame:CGRectMake(_bt_photo.frame.origin.x+_bt_photo.frame.size.width+40, _bt_face.frame.origin.y, img.size.width/2, img.size.height/2)];
                                _bt_location.tag=-5;
                                [_bt_location addSignal:[DragonUIButton TOUCH_UP_INSIDE] forControlEvents:UIControlEventTouchUpInside];
                                [_bt_location setImage:img forState:UIControlStateNormal];
                                //            [_bt_add setImage:[UIImage imageNamed:@"btn_mainmenu_hilight"] forState:UIControlStateHighlighted];
                                [_v_threeBtView addSubview:_bt_location];
                                //                                [_bt_face changePosInSuperViewWithAlignment:1];
                                _bt_location.showsTouchWhenHighlighted=YES;
                                _bt_location.backgroundColor=[UIColor clearColor];
                                
                                RELEASE(_bt_location);
                            }
                            
                            [UIView animateWithDuration:0.3 delay:0 options:UIViewAnimationOptionCurveEaseInOut animations:^{
                                [_v_threeBtView setFrame:CGRectMake(0, _v_bottomView.frame.origin.y+_v_bottomView.frame.size.height, _v_threeBtView.frame.size.width, _v_threeBtView.frame.size.height)];
                            }completion:^(BOOL b){
                                
                            }];
                        }
                    }else{
                        [_v_inputV.textV becomeFirstResponder];
                        
                        if (_v_threeBtView) {
                            REMOVEFROMSUPERVIEW(_bt_face);
                            REMOVEFROMSUPERVIEW(_bt_photo);
                            REMOVEFROMSUPERVIEW(_bt_location);

                            REMOVEFROMSUPERVIEW(_v_threeBtView);
                        }
                        
                    }
                    
                }
                    break;
                    
                case -2://发送
                if([_v_inputV couldSend]){//HTTP请求
//                    bt.selected=!bt.selected;
                    
//                    [self.view setUserInteractionEnabled:NO];
                    
                    {
                        chat *model=[[chat alloc]init];
                        model.str_time=[NSString crearDateFormatter:0];
                        model.user_info=SHARED.curUser;
                        model.content=[_v_inputV.textV.text restoreEscapeCharacter];
                        {
                            ext *_ext=[[ext alloc]init];
                            _ext.type=@"1";
                            model.ext=_ext;
                            RELEASE(_ext);
                        }
                        
                        if (!_tbv.muA_singelSectionData) {
                            _tbv.muA_singelSectionData=[NSMutableArray arrayWithObject:model];
                            [_tbv.muA_singelSectionData retain];
                        }else{
                            [_tbv.muA_singelSectionData addObject:model];
                        }
                        [model release];
                    }
                    
                    [_v_inputV initShadeBt];
                    
                    DragonRequest *request = [DYBHttpMethod sendmessage:_v_inputV.textV.text userid:_model.id isAlert:YES receive:self];
                    [request setTag:3];
                    
                    if (!request) {//无网路
                        [_tbv setUpdateState:DUpdateStateNomal];
                    }
                    
                }
                    break;
                    
                case -3://表情
                {
                    
                }
                    break;
                case -4://拍照
                {
                    UIActionSheet *actionView = [[UIActionSheet alloc]initWithTitle:nil delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:@"立刻拍照" otherButtonTitles:@"相册选择", nil];
                    [actionView showInView:self.view];
                    [actionView release];
                    
                }
                    break;
                case -5://订位
                {
                    
                }
                    break;
                case k_tag_fadeBt:
                {
                    DYBCustomInputView *intput=(DYBCustomInputView *)signal.object;
                    [intput cancelInput];
                }
                    break;
                    
                default:
                    break;
            }
        }
        
    }
    
}

#pragma mark- UIActionSheetDelegate
-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex{
    switch (buttonIndex) {
        case 0:
            if([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]){
                UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];
                imagePicker.delegate = self;
                imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
                [self presentModalViewController:imagePicker animated:YES];
                [imagePicker release];
//                [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(showKeyBoard) name:@"photoShowKeyBoard" object:nil];
                
            }
            break;
        case 1:{
            UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];
            imagePicker.delegate = self;
            [self presentModalViewController:imagePicker animated:YES];
            [imagePicker release];
//            [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(showKeyBoard) name:@"photoShowKeyBoard" object:nil];
        }
            break;
        case 2:{
        }
    }
}

#pragma mark- UIImagePickerControllerDelegate
-(void)imagePickerControllerDidCancel:(UIImagePickerController *)picker{
    
    [picker dismissModalViewControllerAnimated:YES];
}

-(NSString *)getRandomCode{
    NSString *strRandom = nil;
    
    int value = arc4random()%200000;
    strRandom = [NSString stringWithFormat:@"%d", value];
    
    return strRandom;
    
}

- (void)sendPhotoImage:(UIImage *)image {
    
    NSString *strTag = [self getRandomCode];
    
    UIImageView *imageview = [[UIImageView alloc]initWithFrame:CGRectMake(160.0f, 8.0f, 75.0f, 100.0f)];
    [imageview setImage:image];
    [imageview setTag:[strTag intValue]];
    [self.view addSubview:imageview];
//    [imageview release];
    imageview.contentMode = UIViewContentModeScaleAspectFit;
    
    NSMutableDictionary  *params = [DYBHttpInterface sendmessage2:_model.id content:@"图片" type:@"3" lng:nil lat:nil address:nil speech_length:nil];
    NSData *data = [self zipImg:imageview];
    
    RELEASEVIEW(imageview);
    
    
    {
        chat *model=[[chat alloc]init];
        model.str_time=[NSString crearDateFormatter:0];
        model.user_info=SHARED.curUser;
        model.content =@"";
        model.photoImage=image;
        {
            ext *_ext=[[ext alloc]init];
            _ext.type=@"3";
            model.ext=_ext;
            RELEASE(_ext);
        }
        
        if (!_tbv.muA_singelSectionData) {
            _tbv.muA_singelSectionData=[NSMutableArray arrayWithObject:model];
            [_tbv.muA_singelSectionData retain];
        }else{
            [_tbv.muA_singelSectionData addObject:model];
        }
        [model release];
    }
    
    
    
    DYBRequest *request1 = [[DYBRequest alloc]init];;
    DragonRequest *request = [request1 DYBPOSTIMG:params isAlert:YES receive:self imageData:data];
    [request setTag:4];
    
}

//获得图片质量
- (NSInteger)getTYPE{
    UserSettingMode *userDic =  SHARED.currentUserSetting;
    NSString *imgType = userDic.upSendImgType;
    NSString *type = imgType;
    if ([type isEqualToString:@"自动"]) {
        return 0;
    }else if([type isEqualToString:@"高"]){
        return 3;
    }else if([type isEqualToString:@"中"])
    {
        return  2;
        
    }else{//低
        
        return 1;
    }
}

- (NSData *)zipImg:(UIImageView *)imageView{
    
    NSInteger type = [self getTYPE];
    
    NSData *data = nil;
    
    int qu = type;
    if (qu == 0)//图片质量自动
    {
        if ([[DragonDevice networkType] isEqualToString:@"wifi"])
        {
            qu = 3;//wifi
        }
        else
        {
            qu = 2;//3g
        }
    }
    if (qu == 3 && imageView.image.size.width*imageView.image.size.height >= 320*480) {//高
        
        data= [self CompressPicturesMoreThanKB:400 Img:imageView.image imgData:[self UIImageToNSData:imageView.image compressionQuality:1]];
        
    } else if(qu == 2 && (imageView.image.size.width*imageView.image.size.height)/0.49 >= 320*480)//中
    {
        //        data = UIImageJPEGRepresentation(imageView.image, 0.8);
        data= [self CompressPicturesMoreThanKB:100 Img:imageView.image imgData:[self UIImageToNSData:imageView.image compressionQuality:1]];
        
    } else if(qu == 1 && (imageView.image.size.width*imageView.image.size.height)/0.25 >= 320*480)//图片质量低
    {
        //        data = UIImageJPEGRepresentation(imageView.image, 0.7);
        data= [self CompressPicturesMoreThanKB:70 Img:imageView.image imgData:[self UIImageToNSData:imageView.image compressionQuality:1]];
        
    }
    else {//自动
        data = UIImageJPEGRepresentation(imageView.image, 1.0);
        
    }
    
    if (qu!=3&&qu!=2) {
        NSInteger willDe = 0;
        for (int i = 8; i > 0; i--) {
            if (data.length/i <= 1000000) {//1000k
                willDe = i;
                break;
            }
        }
        
        if (data.length > 1000000) {
            float s = (CGFloat)(willDe/10);
            data = UIImageJPEGRepresentation(imageView.image, s);
        }
    }
    
    
    return data;
}


#pragma mark-把大于多少K的图片压缩
- (NSData *)CompressPicturesMoreThanKB:(CGFloat)k Img:(UIImage *)img imgData:(NSData *)imgData
{
    NSUInteger sizeOrigin = [imgData length];
    /*NSUInteger*/ CGFloat sizesizeOriginKB = (CGFloat)(sizeOrigin / 1024.f);
    
    if (sizesizeOriginKB > k) {
        float a = k;
        float  b = (float)sizesizeOriginKB;
        float q = sqrt(a/b);
        CGSize sizeImage = [img size];
        CGFloat iwidthSmall = sizeImage.width * q;
        CGFloat iheightSmall = sizeImage.height * q;
        CGSize itemSizeSmall = CGSizeMake(iwidthSmall, iheightSmall);
        UIGraphicsBeginImageContext(itemSizeSmall);
        CGRect imageRectSmall = CGRectMake(0.0f, 0.0f, (NSUInteger)itemSizeSmall.width+1, (NSUInteger)itemSizeSmall.height+1);
        [img drawInRect:imageRectSmall];
        UIImage *SmallImage = UIGraphicsGetImageFromCurrentImageContext();
        UIGraphicsEndImageContext();
        NSData *dataImageSend = UIImageJPEGRepresentation(SmallImage, 1.0);
        imgData = dataImageSend;
    }
    return imgData;
}


#pragma mark-把UIImage转化压缩成NSData
- (NSData *)UIImageToNSData:(UIImage *)img compressionQuality:(CGFloat)compressionQuality/*传-1表示返回png;压缩系数,一般为1.0,如果对图片的清晰度要求不高,可减小压缩系数,从而大福降低图片数据量,此函数本身就比UIImagePNGRepresentation函数得到的图片数据量低*/
{
    return (compressionQuality!=-1)?(UIImageJPEGRepresentation(img, compressionQuality)):(UIImagePNGRepresentation(img));
}



- (void) imagePickerController:(UIImagePickerController*)reader didFinishPickingMediaWithInfo:(NSDictionary*)info{
    _v_filter = [[DYBPhotoView alloc]initWithFrame:CGRectMake(0.0f, 0.0f, self.view.frame.size.width, self.view.frame.size.height)];
    [_v_filter setFather:self];
    UIImage *image = [info objectForKey:@"UIImagePickerControllerOriginalImage"];//获取图片
    if (reader.sourceType == UIImagePickerControllerSourceTypeCamera)
    {
        UIImageWriteToSavedPhotosAlbum(image, nil, nil, nil);//将拍到的图片保存到相册
    }
    
    if ((reader.sourceType == UIImagePickerControllerSourceTypeCamera)) {
        [self manageImage:image];
        
    }else if((reader.sourceType == UIImagePickerControllerSourceTypePhotoLibrary)){
        
        if (image.size.height<=self.view.bounds.size.height&&image.size.width<=self.view.bounds.size.width) {
            [_v_filter.rootImageView setFrame:CGRectMake(0.0f, 0.0f, image.size.width, image.size.height)];
            [_v_filter.rootImageView setContentMode:UIViewContentModeScaleAspectFit];
            
            _v_filter.currentImage = image;
            
        }else if(!(image.size.height<=self.view.bounds.size.height)&&(image.size.width<=self.view.bounds.size.width))
        {
            [_v_filter.rootImageView setFrame:CGRectMake(0.0f, 0.0f, image.size.width*self.view.bounds.size.height/image.size.height, self.view.bounds.size.height)];
            [_v_filter.rootImageView setContentMode:UIViewContentModeScaleAspectFit];
            _v_filter.currentImage = image;
            
        }else if ((image.size.height<=self.view.bounds.size.height)&&!(image.size.width<=self.view.bounds.size.width)){
            
            [_v_filter.rootImageView setFrame:CGRectMake(0.0f, 0.0f, self.view.bounds.size.width, image.size.height*320/image.size.width)];
            
            _v_filter.currentImage = image;
            
        }else{
            [self manageImage:image];
        }
    }
    [_v_filter.rootImageView setCenter:CGPointMake(160.0f,self.view.bounds.size.height/2-25)];
    
    
    _v_inputV.i_contentType = 3;
    
    _v_filter.rootImageView.image = _v_filter.currentImage;
    [self dismissModalViewControllerAnimated:YES];
    [self.view addSubview:_v_filter];
    
}

-(void)manageImage:(UIImage*)image{
    
    float ratX = image.size.width/320;
    float ratY = image.size.height/self.view.bounds.size.height;
    float lastRat =  1;
    
    if (ratX>ratY) {
        lastRat = ratX;
        [_v_filter.rootImageView setFrame:CGRectMake(0.0f, 0.0f, self.view.bounds.size.width, image.size.height*320/image.size.width)];
        UIImage *smallImage = [image resizedImageWithContentMode:UIViewContentModeScaleAspectFit bounds:CGSizeMake(self.view.bounds.size.width*2, image.size.height*320/image.size.width*2) interpolationQuality:kCGInterpolationDefault];
        _v_filter.currentImage = smallImage;
        
    }else{
        lastRat = ratY;
        [_v_filter.rootImageView setFrame:CGRectMake(0.0f, 0.0f, image.size.width*self.view.bounds.size.height/image.size.height, self.view.bounds.size.height)];
        UIImage *smallImage = [image resizedImageWithContentMode:UIViewContentModeScaleAspectFit bounds:CGSizeMake(image.size.width*self.view.bounds.size.height/image.size.height*2, self.view.bounds.size.height*2) interpolationQuality:kCGInterpolationDefault];
        _v_filter.currentImage = smallImage;
        
    }
    _v_filter.rootImageView.contentMode = UIViewContentModeScaleAspectFit;
    
    
}
-(UIImage *)newImage:(UIImage*)iamge newSize:(CGSize)newSize{
    UIImageView *view  = [[UIImageView alloc]initWithFrame:CGRectMake(0.0f, 0.0f, newSize.width, newSize.height)];
    [view setImage:iamge];
    return view.image;
    
    
}

-(UIImage *)imageWithImageSimple:(UIImage*)image scaledToSize:(CGSize)newSize
{
    UIGraphicsBeginImageContext(newSize);//根据当前大小创建一个基于位图图形的环境
    [image drawInRect:CGRectMake(0,0,newSize.width,newSize.height)];//根据新的尺寸画出传过来的图片
    UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();//从当前环境当中得到重绘的图片
    UIGraphicsEndImageContext();//关闭当前环境
    return newImage;
}

-(int)getTYPE:(NSString*)type{
    if ([type isEqualToString:@"自动"]) {
        return 0;
    }else if([type isEqualToString:@"高"]){
        return 3;
    }else if([type isEqualToString:@"中"])
    {
        return  2;
        
    }else{
        
        return 1;
    }
}

//在滤镜页点击确定后回调
-(void )doSaveImage:(NSNotification*)info{
    UIImage *iamge = (UIImage*)[info object];
    
    if (iamge != nil) {
        
        
        
//        NSString *strTag = [self getRandomCode];
//        
//        UIImageView *image = [[UIImageView alloc]initWithFrame:CGRectMake(160.0f, 8.0f, 75.0f, 100.0f)];
//        [image setImage:iamge];
//        [image setTag:[strTag intValue]];
//        [self.view addSubview:image];
//        [image release];
//        image.contentMode = UIViewContentModeScaleAspectFit;
//        
//        
//        HttpHelp * help = [[HttpHelp alloc]init:self progress_show:NO page:1];
//        NSMutableDictionary  *params = [Rrequest_Data sendmessage2:tact.user_info.userid content:@"图片" type:@"3" lng:nil lat:nil address:nil speech_length:nil];
//        help.tag = strTag;
//        help.addErrView = NO;
//        NSData *data = [CommonHelper zipImg:image];
//        [help startHttpEX:message_send :params data:data];
//        help.isQueryMore = YES;
//        
//        [dicChat setObject:image forKey:strTag];
//        
//        [self SendMessage:[strTag intValue] sendView:(id *)image strPath:@""];
    }
    
    //    UILabel *label = (UILabel*)[self.view viewWithTag:99];
    //    UITextView *textView = (UITextView*)[self.view viewWithTag:100];
    
    //    UIImageView *iamgeView = (UIImageView*)[self.view viewWithTag:204];
    //    [textView setFrame:CGRectMake(0.0f, 44.0f, 230, label.frame.origin.y - 40)];
    //    int num = textView.text.length;
    
    //    [self setUserSendButton:iamgeView num:num];
}



#pragma mark- 只接受HTTP信号
- (void)handleRequest:(DragonRequest *)request receiveObj:(id)receiveObj
{
    if ([request succeed])
    {
        switch (request.tag) {
            case 1://获取
            {
                JsonResponse *response = (JsonResponse *)receiveObj;
                if ([response response] ==khttpsucceedCode)
                {
                    NSArray *list=[response.data objectForKey:@"chat"];
                    
//                    if (_tbv.muA_singelSectionData.count>0 && list.count>0) {
//                        [_tbv.muA_singelSectionData removeAllObjects];
//                        
//                        [_tbv release_muA_differHeightCellView];
//                    }
                    
                    for (NSDictionary *d in list) {
                        chat *model = [chat JSONReflection:d];

                        if (!_tbv.muA_singelSectionData) {
                            [self creatTbv];
                            
                            _tbv.muA_singelSectionData=[NSMutableArray arrayWithObject:model];
                            [_tbv.muA_singelSectionData retain];
                        }else{
                            [_tbv.muA_singelSectionData addObject:model];
                        }
                    }
                    
                    {
                        if (_tbv.muA_singelSectionData.count>0 && list.count>0) {
                            [_tbv._muA_differHeightCellView removeAllObjects];
                            
                            if ([[response.data objectForKey:@"havenext"] isEqualToString:@"1"]) {
                                [_tbv reloadData:NO];
                            }else{
                                [_tbv reloadData:YES];
                            }
                        }else{//没获取到数据,恢复headerView
                            [_tbv reloadData:YES];
                        }
                        
                    }
                    
                }else if ([response response] ==khttpfailCode){
                    
                }
                
                [self.view setUserInteractionEnabled:YES];
                
            }
                
                break;
                
            case 2://加载更多
            {
                JsonResponse *response = (JsonResponse *)receiveObj;
                
                if ([response response] ==khttpsucceedCode)
                {
                    NSArray *list=[response.data objectForKey:@"chat"];
                    int index=0;
                    for (NSDictionary *d in list) {
                        chat *model = [chat JSONReflection:d];
//                        {
//                            [_tbv.muA_singelSectionDataCopy insertObject:model atIndex:index];
//                        }
                        
//                        if ([model.ext.type isEqualToString:@"4"]) {//语音数据先不加
//                            index++;
//                            continue;
//                        }
                        if (!_tbv.muA_singelSectionData) {
                            _tbv.muA_singelSectionData=[NSMutableArray arrayWithObject:model];
                            [_tbv.muA_singelSectionData retain];
                        }else{
                            [_tbv.muA_singelSectionData insertObject:model atIndex:index];
                            [_tbv._muA_differHeightCellView insertObject:[NSNull null] atIndex:index];//先把cell占着,在计算高度时被真正的cell替换
                        }
                        
                        index++;
                    }
                    
                    {//加载更多
                        if (_tbv.muA_singelSectionData.count>0 && list.count>0) {
//                            [_tbv release_muA_differHeightCellView];
                            
                            if ([[response.data objectForKey:@"havenext"] isEqualToString:@"1"]) {
                                [_tbv reloadData:NO];
                            }else{
                                [_tbv reloadData:YES];
                            }
                        }else{//没获取到数据,恢复headerView
                            [_tbv reloadData:YES];
                        }
                        
                    }
                    
                    [self.view setUserInteractionEnabled:YES];
                    return;
                    
                }else if ([response response] ==khttpfailCode)
                {
                    
                }
                
                [self.view setUserInteractionEnabled:YES];
                [_tbv.footerView changeState:PULLSTATEEND];
                
                
            }
                break;
            case 3://发私信
            {
                JsonResponse *response = (JsonResponse *)receiveObj;
                
                if ([response response] ==khttpsucceedCode)
                {
                    if ([[response.data objectForKey:@"send"] isEqualToString:@"1"]) {//成功
                        [_v_inputV sendSuccess];
                        [_tbv reloadData:YES];
//                        [self.view setUserInteractionEnabled:YES];
                        return;
                    }else{
                        [_tbv.muA_singelSectionData removeLastObject];
                    }
                    
                    
                }else if ([response response] ==khttpfailCode)
                {
                    
                }
                
                [_tbv.muA_singelSectionData removeLastObject];

//                [self.view setUserInteractionEnabled:YES];
                
            }
                break;
            case 4://发图片
            {
                JsonResponse *response = (JsonResponse *)receiveObj;
                
                if ([response response] ==khttpsucceedCode)
                {
                    NSLog(@"=======%@",response.message);
                    if ([[response.data objectForKey:@"send"] isEqualToString:@"1"]) {//成功
                        [_tbv reloadData:YES];
                        //                        [self.view setUserInteractionEnabled:YES];
                        return;
                    }else{
                        [_tbv.muA_singelSectionData removeLastObject];
                    }
                    
                    
                }else if ([response response] ==khttpfailCode)
                {
                    NSLog(@"=======%@",response.message);
                }
                
                [_tbv.muA_singelSectionData removeLastObject];
                
                
            }
                break;
                
            default:
                break;
        }
    }
}

@end
